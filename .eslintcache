[{"C:\\Users\\tomfa\\Desktop\\Other Stuff\\EduMemory\\edumemory\\src\\index.js":"1","C:\\Users\\tomfa\\Desktop\\Other Stuff\\EduMemory\\edumemory\\src\\App.js":"2","C:\\Users\\tomfa\\Desktop\\Other Stuff\\EduMemory\\edumemory\\src\\reportWebVitals.js":"3","C:\\Users\\tomfa\\Desktop\\Other Stuff\\EduMemory\\edumemory\\src\\Components\\Home.js":"4","C:\\Users\\tomfa\\Desktop\\Other Stuff\\EduMemory\\edumemory\\src\\Components\\Tutorial.js":"5","C:\\Users\\tomfa\\Desktop\\Other Stuff\\EduMemory\\edumemory\\src\\Components\\Game.js":"6","C:\\Users\\tomfa\\Desktop\\Other Stuff\\EduMemory\\edumemory\\src\\Components\\About.js":"7","C:\\Users\\tomfa\\Desktop\\Other Stuff\\EduMemory\\EduMemory\\src\\index.js":"8","C:\\Users\\tomfa\\Desktop\\Other Stuff\\EduMemory\\EduMemory\\src\\reportWebVitals.js":"9","C:\\Users\\tomfa\\Desktop\\Other Stuff\\EduMemory\\EduMemory\\src\\App.js":"10","C:\\Users\\tomfa\\Desktop\\Other Stuff\\EduMemory\\EduMemory\\src\\Components\\Home.js":"11","C:\\Users\\tomfa\\Desktop\\Other Stuff\\EduMemory\\EduMemory\\src\\Components\\About.js":"12","C:\\Users\\tomfa\\Desktop\\Other Stuff\\EduMemory\\EduMemory\\src\\Components\\Tutorial.js":"13","C:\\Users\\tomfa\\Desktop\\Other Stuff\\EduMemory\\EduMemory\\src\\Components\\Game.js":"14"},{"size":697,"mtime":1611364595825,"results":"15","hashOfConfig":"16"},{"size":2315,"mtime":1611364595820,"results":"17","hashOfConfig":"16"},{"size":375,"mtime":1610507872217,"results":"18","hashOfConfig":"16"},{"size":576,"mtime":1611364595824,"results":"19","hashOfConfig":"16"},{"size":1299,"mtime":1611364684606,"results":"20","hashOfConfig":"16"},{"size":8660,"mtime":1611364667446,"results":"21","hashOfConfig":"16"},{"size":738,"mtime":1611364595822,"results":"22","hashOfConfig":"16"},{"size":697,"mtime":1611364595825,"results":"23","hashOfConfig":"24"},{"size":375,"mtime":1610507872217,"results":"25","hashOfConfig":"24"},{"size":2315,"mtime":1611364595820,"results":"26","hashOfConfig":"24"},{"size":576,"mtime":1611364595824,"results":"27","hashOfConfig":"24"},{"size":738,"mtime":1611364595822,"results":"28","hashOfConfig":"24"},{"size":1299,"mtime":1611364684606,"results":"29","hashOfConfig":"24"},{"size":8688,"mtime":1611365836006,"results":"30","hashOfConfig":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1baqkfy",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"1d7gdd5",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"47"},"C:\\Users\\tomfa\\Desktop\\Other Stuff\\EduMemory\\edumemory\\src\\index.js",[],"C:\\Users\\tomfa\\Desktop\\Other Stuff\\EduMemory\\edumemory\\src\\App.js",[],"C:\\Users\\tomfa\\Desktop\\Other Stuff\\EduMemory\\edumemory\\src\\reportWebVitals.js",[],"C:\\Users\\tomfa\\Desktop\\Other Stuff\\EduMemory\\edumemory\\src\\Components\\Home.js",[],"C:\\Users\\tomfa\\Desktop\\Other Stuff\\EduMemory\\edumemory\\src\\Components\\Tutorial.js",[],"C:\\Users\\tomfa\\Desktop\\Other Stuff\\EduMemory\\edumemory\\src\\Components\\Game.js",["62","63","64","65"],"C:\\Users\\tomfa\\Desktop\\Other Stuff\\EduMemory\\edumemory\\src\\Components\\About.js",[],"C:\\Users\\tomfa\\Desktop\\Other Stuff\\EduMemory\\EduMemory\\src\\index.js",[],["66","67"],"C:\\Users\\tomfa\\Desktop\\Other Stuff\\EduMemory\\EduMemory\\src\\reportWebVitals.js",[],"C:\\Users\\tomfa\\Desktop\\Other Stuff\\EduMemory\\EduMemory\\src\\App.js",[],"C:\\Users\\tomfa\\Desktop\\Other Stuff\\EduMemory\\EduMemory\\src\\Components\\Home.js",[],"C:\\Users\\tomfa\\Desktop\\Other Stuff\\EduMemory\\EduMemory\\src\\Components\\About.js",[],["68","69"],"C:\\Users\\tomfa\\Desktop\\Other Stuff\\EduMemory\\EduMemory\\src\\Components\\Tutorial.js",[],"C:\\Users\\tomfa\\Desktop\\Other Stuff\\EduMemory\\EduMemory\\src\\Components\\Game.js",["70","71","72","73"],"// import React from \"react\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useSpring, animated as a } from \"react-spring\";\r\nimport HomeButton from \"../img/home-button.svg\";\r\nimport Background1 from \"../img/cartoon-animals/card-1.png\";\r\nimport Background13 from \"../img/cartoon-animals/card-13.png\";\r\nimport Background3 from \"../img/cartoon-animals/card-3.png\";\r\nimport Background4 from \"../img/cartoon-animals/card-4.png\";\r\nimport Background5 from \"../img/cartoon-animals/card-5.png\";\r\nimport Background6 from \"../img/cartoon-animals/card-6.png\";\r\nimport Background7 from \"../img/cartoon-animals/card-7.png\";\r\nimport Background8 from \"../img/cartoon-animals/card-8.png\";\r\nimport Background9 from \"../img/cartoon-animals/card-9.png\";\r\nimport Background14 from \"../img/cartoon-animals/card-14.png\";\r\nimport Background11 from \"../img/cartoon-animals/card-11.png\";\r\nimport Background12 from \"../img/cartoon-animals/card-12.png\";\r\nimport logo from \"../icons/brain-2.svg\";\r\n\r\nexport default function Game({ setPageStatus, pageStatus, flippedCount }) {\r\n  const [options, setOptions] = useState(null);\r\n  const [highScore, setHighScore] = useState(0);\r\n\r\n  //This will check to see if new score is high score\r\n  useEffect(() => {\r\n    const json = localStorage.getItem(\"memorygamehighscore\");\r\n    const savedScore = JSON.parse(json);\r\n    if (savedScore) {\r\n      setHighScore(savedScore);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className={`game ${pageStatus ? \"active-game\" : \"\"}`}>\r\n      <div>\r\n        <button onClick={() => setPageStatus(0)} className=\"home-button\">\r\n          <img className=\"home-pic\" src={HomeButton} alt=\"Home Button\" />\r\n        </button>\r\n      </div>\r\n      <div className=\"logo-title-div\">\r\n        <h1 className=\"logo-title\">EduMemory</h1>\r\n        <img className=\"brain-logo\" alt=\"EduMemory logo\" src={logo}></img>\r\n      </div>\r\n\r\n      <h2>Memory Game</h2>\r\n\r\n      <div className=\"container\">\r\n        <div>\r\n          <h4>High Score: {highScore}</h4>\r\n        </div>\r\n        <div>\r\n          {options === null ? (\r\n            <h2>Choose a difficulty below to begin!</h2>\r\n          ) : (\r\n            <h2>Turns: {flippedCount}</h2>\r\n          )}\r\n        </div>\r\n        <div>\r\n          {options === null ? (\r\n            <>\r\n              <button onClick={() => setOptions(12)}>Easy</button>\r\n              <button onClick={() => setOptions(18)}>Medium</button>\r\n              <button onClick={() => setOptions(24)}>Hard</button>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <button onClick={() => setOptions(null)}>Restart</button>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {options ? (\r\n        <MemoryGame\r\n          options={options}\r\n          setOptions={setOptions}\r\n          highScore={highScore}\r\n          setHighScore={setHighScore}\r\n        />\r\n      ) : (\r\n        <h2></h2>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n//Game Board. Put in another file\r\nfunction MemoryGame({ options, setOptions, highScore, setHighScore }) {\r\n  const [game, setGame] = useState([]);\r\n  const [flippedCount, setFlippedCount] = useState(0);\r\n  const [flippedIndexes, setFlippedIndexes] = useState([]);\r\n\r\n  const colors = [\r\n    `url(${Background1})`,\r\n    `url(${Background13})`,\r\n    `url(${Background3})`,\r\n    `url(${Background4})`,\r\n    `url(${Background5})`,\r\n    `url(${Background6})`,\r\n    `url(${Background7})`,\r\n    `url(${Background8})`,\r\n    `url(${Background9})`,\r\n    `url(${Background14})`,\r\n    `url(${Background11})`,\r\n    `url(${Background12})`,\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const newGame = [];\r\n    for (let i = 0; i < options / 2; i++) {\r\n      const firstOption = {\r\n        id: 2 * i,\r\n        colorId: i,\r\n        color: colors[i],\r\n        flipped: false,\r\n      };\r\n      const secondOption = {\r\n        id: 2 * i + 1,\r\n        colorId: i,\r\n        color: colors[i],\r\n        flipped: false,\r\n      };\r\n\r\n      newGame.push(firstOption);\r\n      newGame.push(secondOption);\r\n    }\r\n\r\n    const shuffledGame = newGame.sort(() => Math.random() - 0.5);\r\n    setGame(shuffledGame);\r\n  }, []);\r\n\r\n  //Section that shows high score. Maybe change later as is a little confusing\r\n  useEffect(() => {\r\n    const finished = !game.some((card) => !card.flipped);\r\n    if (finished && game.length > 0) {\r\n      setTimeout(() => {\r\n        const bestPossible = game.length;\r\n        let multiplier;\r\n\r\n        if (options === 12) {\r\n          multiplier = 5;\r\n        } else if (options === 18) {\r\n          multiplier = 2.5;\r\n        } else if (options === 24) {\r\n          multiplier = 1;\r\n        }\r\n\r\n        const pointsLost = Math.round(\r\n          multiplier * (0.66 * flippedCount - bestPossible)\r\n        );\r\n\r\n        let score;\r\n        if (pointsLost < 100) {\r\n          score = 100 - pointsLost;\r\n        } else {\r\n          score = 0;\r\n        }\r\n\r\n        if (score > highScore) {\r\n          setHighScore(score);\r\n          const json = JSON.stringify(score);\r\n          localStorage.setItem(\"memorygamehighscore\", json);\r\n        }\r\n        //was getting error \"Unexpected use of 'confirm' no-restricted-globals\". Just needed to add \"window.\"below\r\n        const newGame = window.confirm(\r\n          \"You Win!, SCORE: \" + score + \" New Game?\"\r\n        );\r\n        if (newGame) {\r\n          const gameLength = game.length;\r\n          setOptions(null);\r\n          setTimeout(() => {\r\n            setOptions(gameLength);\r\n          }, 5);\r\n        } else {\r\n          setOptions(null);\r\n        }\r\n      }, 500);\r\n    }\r\n  }, [game]);\r\n\r\n  // Runs if two cards have been flipped\r\n  if (flippedIndexes.length === 2) {\r\n    const match =\r\n      game[flippedIndexes[0]].colorId === game[flippedIndexes[1]].colorId;\r\n\r\n    if (match) {\r\n      const newGame = [...game];\r\n      newGame[flippedIndexes[0]].flipped = true;\r\n      newGame[flippedIndexes[1]].flipped = true;\r\n      setGame(newGame);\r\n\r\n      const newIndexes = [...flippedIndexes];\r\n      newIndexes.push(false);\r\n      setFlippedIndexes(newIndexes);\r\n    } else {\r\n      const newIndexes = [...flippedIndexes];\r\n      newIndexes.push(true);\r\n      setFlippedIndexes(newIndexes);\r\n    }\r\n  }\r\n\r\n  if (game.length === 0) return <div>loading...</div>;\r\n  else {\r\n    return (\r\n      <div id=\"cards\">\r\n        {game.map((card, index) => (\r\n          <div className=\"card\" key={index}>\r\n            <Card\r\n              id={index}\r\n              color={card.color}\r\n              game={game}\r\n              flippedCount={flippedCount}\r\n              setFlippedCount={setFlippedCount}\r\n              flippedIndexes={flippedIndexes}\r\n              setFlippedIndexes={setFlippedIndexes}\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//Card setup. should be in a separate file eventually\r\nfunction Card({\r\n  id,\r\n  color,\r\n  game,\r\n  flippedCount,\r\n  setFlippedCount,\r\n  flippedIndexes,\r\n  setFlippedIndexes,\r\n}) {\r\n  const [flipped, set] = useState(false);\r\n  const { transform, opacity } = useSpring({\r\n    opacity: flipped ? 1 : 0,\r\n    transform: `perspective(600px) rotateX(${flipped ? 180 : 0}deg)`,\r\n    config: { mass: 5, tension: 500, friction: 80 },\r\n  });\r\n\r\n  //Set timer, then flip the cards back\r\n  useEffect(() => {\r\n    if (flippedIndexes[2] === true && flippedIndexes.indexOf(id) > -1) {\r\n      setTimeout(() => {\r\n        set((state) => !state);\r\n        setFlippedCount(flippedCount + 1);\r\n        setFlippedIndexes([]);\r\n      }, 1000);\r\n    } else if (flippedIndexes[2] === false && id === 0) {\r\n      setFlippedCount(flippedCount + 1);\r\n      setFlippedIndexes([]);\r\n    }\r\n  }, [flippedIndexes]);\r\n\r\n  const onCardClick = () => {\r\n    if (!game[id].flipped && flippedCount % 3 === 0) {\r\n      set((state) => !state);\r\n      setFlippedCount(flippedCount + 1);\r\n      const newIndexes = [...flippedIndexes];\r\n      newIndexes.push(id);\r\n      setFlippedIndexes(newIndexes);\r\n    } else if (\r\n      flippedCount % 3 === 1 &&\r\n      !game[id].flipped &&\r\n      flippedIndexes.indexOf(id) < 0\r\n    ) {\r\n      set((state) => !state);\r\n      setFlippedCount(flippedCount + 1);\r\n      const newIndexes = [...flippedIndexes];\r\n      newIndexes.push(id);\r\n      setFlippedIndexes(newIndexes);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div onClick={onCardClick}>\r\n      <a.div\r\n        className=\"c back\"\r\n        style={{\r\n          opacity: opacity.interpolate((o) => 1 - o),\r\n          transform,\r\n        }}\r\n      />\r\n      <a.div\r\n        className=\"c front\"\r\n        style={{\r\n          opacity,\r\n          transform: transform.interpolate((t) => `${t} rotateX(180deg)`),\r\n          backgroundImage: color,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\n//export default Game;\r\n",{"ruleId":"74","severity":1,"message":"75","line":80,"column":9,"nodeType":"76","endLine":80,"endColumn":13},{"ruleId":"77","severity":1,"message":"78","line":129,"column":6,"nodeType":"79","endLine":129,"endColumn":8,"suggestions":"80"},{"ruleId":"77","severity":1,"message":"81","line":178,"column":6,"nodeType":"79","endLine":178,"endColumn":12,"suggestions":"82"},{"ruleId":"77","severity":1,"message":"83","line":252,"column":6,"nodeType":"79","endLine":252,"endColumn":22,"suggestions":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"85","replacedBy":"89"},{"ruleId":"87","replacedBy":"90"},{"ruleId":"74","severity":1,"message":"75","line":80,"column":9,"nodeType":"76","endLine":80,"endColumn":13},{"ruleId":"77","severity":1,"message":"78","line":129,"column":6,"nodeType":"79","endLine":129,"endColumn":8,"suggestions":"91"},{"ruleId":"77","severity":1,"message":"81","line":178,"column":6,"nodeType":"79","endLine":178,"endColumn":12,"suggestions":"92"},{"ruleId":"77","severity":1,"message":"83","line":252,"column":6,"nodeType":"79","endLine":252,"endColumn":22,"suggestions":"93"},"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'colors' and 'options'. Either include them or remove the dependency array.","ArrayExpression",["94"],"React Hook useEffect has missing dependencies: 'flippedCount', 'highScore', 'options', 'setHighScore', and 'setOptions'. Either include them or remove the dependency array. If 'setHighScore' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["95"],"React Hook useEffect has missing dependencies: 'flippedCount', 'id', 'setFlippedCount', and 'setFlippedIndexes'. Either include them or remove the dependency array. If 'setFlippedCount' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["96"],"no-native-reassign",["97"],"no-negated-in-lhs",["98"],["97"],["98"],["99"],["100"],["101"],{"desc":"102","fix":"103"},{"desc":"104","fix":"105"},{"desc":"106","fix":"107"},"no-global-assign","no-unsafe-negation",{"desc":"102","fix":"108"},{"desc":"104","fix":"109"},{"desc":"106","fix":"110"},"Update the dependencies array to be: [colors, options]",{"range":"111","text":"112"},"Update the dependencies array to be: [flippedCount, game, highScore, options, setHighScore, setOptions]",{"range":"113","text":"114"},"Update the dependencies array to be: [flippedCount, flippedIndexes, id, setFlippedCount, setFlippedIndexes]",{"range":"115","text":"116"},{"range":"117","text":"112"},{"range":"118","text":"114"},{"range":"119","text":"116"},[4074,4076],"[colors, options]",[5515,5521],"[flippedCount, game, highScore, options, setHighScore, setOptions]",[7574,7590],"[flippedCount, flippedIndexes, id, setFlippedCount, setFlippedIndexes]",[4102,4104],[5543,5549],[7602,7618]]