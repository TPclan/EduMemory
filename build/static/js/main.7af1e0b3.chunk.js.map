{"version":3,"sources":["icons/brain-2.svg","Components/Home.js","img/home-button.svg","img/cartoon-animals/card-1.png","img/cartoon-animals/card-13.png","img/cartoon-animals/card-3.png","img/cartoon-animals/card-4.png","img/cartoon-animals/card-5.png","img/cartoon-animals/card-6.png","img/cartoon-animals/card-7.png","img/cartoon-animals/card-8.png","img/cartoon-animals/card-9.png","img/cartoon-animals/card-14.png","img/cartoon-animals/card-11.png","img/cartoon-animals/card-12.png","img/CardBackBlue.png","Components/Game.js","Components/About.js","Components/Tutorial.js","App.js","reportWebVitals.js","index.js"],"names":["Home","setPageStatus","pageStatus","className","alt","src","logo","onClick","MemoryGame","options","setOptions","highScore","setHighScore","useState","game","setGame","flippedCount","setFlippedCount","flippedIndexes","setFlippedIndexes","useEffect","colors","Background1","Background13","Background3","Background4","Background5","Background6","Background7","Background8","Background9","Background14","Background11","Background12","newGame","i","firstOption","id","colorId","color","flipped","secondOption","push","shuffledGame","sort","Math","random","some","card","length","setTimeout","multiplier","bestPossible","score","pointsLost","round","json","JSON","stringify","localStorage","setItem","window","confirm","gameLength","newIndexes","map","index","Card","set","useSpring","opacity","transform","config","mass","tension","friction","indexOf","state","div","style","interpolate","o","backgroundImage","CardBack","t","Game","getItem","savedScore","parse","HomeButton","end","duration","About","href","target","rel","Tutorial","App","exitBeforeEnter","exit","initial","animate","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7af1e0b3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/brain-2.768f7e44.svg\";","import React from \"react\";\r\n//Import Images or Logos\r\nimport logo from \"../icons/brain-2.svg\";\r\n\r\nconst Home = ({ setPageStatus, pageStatus }) => {\r\n  return (\r\n    <div className=\"home\">\r\n      <div>\r\n        <h1>EduMemory</h1>\r\n        <img className=\"brain-img\" alt=\"EduMemory logo\" src={logo}></img>\r\n      </div>\r\n\r\n      <button onClick={() => setPageStatus(1)}>Play</button>\r\n      <button onClick={() => setPageStatus(2)}>How To Play</button>\r\n      <button onClick={() => setPageStatus(3)}>About</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","export default __webpack_public_path__ + \"static/media/home-button.eca9f8a6.svg\";","export default __webpack_public_path__ + \"static/media/card-1.66ab882b.png\";","export default __webpack_public_path__ + \"static/media/card-13.0d921a5c.png\";","export default __webpack_public_path__ + \"static/media/card-3.b0472f0f.png\";","export default __webpack_public_path__ + \"static/media/card-4.b648fda9.png\";","export default __webpack_public_path__ + \"static/media/card-5.0bf08e22.png\";","export default __webpack_public_path__ + \"static/media/card-6.1d2d1ecd.png\";","export default __webpack_public_path__ + \"static/media/card-7.07bde922.png\";","export default __webpack_public_path__ + \"static/media/card-8.c7103e77.png\";","export default __webpack_public_path__ + \"static/media/card-9.1135933e.png\";","export default __webpack_public_path__ + \"static/media/card-14.26965b23.png\";","export default __webpack_public_path__ + \"static/media/card-11.b25414e3.png\";","export default __webpack_public_path__ + \"static/media/card-12.4f0afec8.png\";","export default __webpack_public_path__ + \"static/media/CardBackBlue.d0829c51.png\";","// import React from \"react\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useSpring, animated as a } from \"react-spring\";\r\nimport HomeButton from \"../img/home-button.svg\";\r\nimport Background1 from \"../img/cartoon-animals/card-1.png\";\r\nimport Background13 from \"../img/cartoon-animals/card-13.png\";\r\nimport Background3 from \"../img/cartoon-animals/card-3.png\";\r\nimport Background4 from \"../img/cartoon-animals/card-4.png\";\r\nimport Background5 from \"../img/cartoon-animals/card-5.png\";\r\nimport Background6 from \"../img/cartoon-animals/card-6.png\";\r\nimport Background7 from \"../img/cartoon-animals/card-7.png\";\r\nimport Background8 from \"../img/cartoon-animals/card-8.png\";\r\nimport Background9 from \"../img/cartoon-animals/card-9.png\";\r\nimport Background14 from \"../img/cartoon-animals/card-14.png\";\r\nimport Background11 from \"../img/cartoon-animals/card-11.png\";\r\nimport Background12 from \"../img/cartoon-animals/card-12.png\";\r\nimport logo from \"../icons/brain-2.svg\";\r\nimport CountUp from \"react-countup\";\r\n//import { useTapGesture } from \"framer-motion\";\r\nimport CardBack from \"../img/CardBackBlue.png\";\r\n\r\nfunction Game({ setPageStatus, pageStatus, flippedCount }) {\r\n  const [options, setOptions] = useState(null);\r\n  const [highScore, setHighScore] = useState(0);\r\n\r\n  //This will check to see if new score is high score\r\n  useEffect(() => {\r\n    const json = localStorage.getItem(\"memorygamehighscore\");\r\n    const savedScore = JSON.parse(json);\r\n    if (savedScore) {\r\n      setHighScore(savedScore);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className={`game ${pageStatus ? \"active-game\" : \"\"}`}>\r\n      <div>\r\n        <button className=\"home-button\" onClick={() => setPageStatus(0)}>\r\n          <img className=\"home-pic\" src={HomeButton} alt=\"Home Button\" />\r\n        </button>\r\n      </div>\r\n      <div className=\"logo-title-div\">\r\n        <h1 className=\"logo-title\">EduMemory</h1>\r\n        <img className=\"brain-logo\" alt=\"EduMemory logo\" src={logo}></img>\r\n      </div>\r\n\r\n      <h2>Memory Game</h2>\r\n\r\n      <div className=\"container\">\r\n        <div>\r\n          {options === null ? (\r\n            <h2>Choose a difficulty below to begin!</h2>\r\n          ) : (\r\n            <h2>Pick 2 cards!</h2>\r\n          )}\r\n          {options === null ? (\r\n            <h6> </h6>\r\n          ) : (\r\n            <div className=\"timer\">\r\n              <h2>Time:</h2>\r\n              <CountUp className=\"CountUp1\" end={2000} duration={20000} />\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"difficulty\">\r\n          {options === null ? (\r\n            <>\r\n              <button onClick={() => setOptions(12)}>Easy</button>\r\n              <button onClick={() => setOptions(18)}>Medium</button>\r\n              <button onClick={() => setOptions(24)}>Hard</button>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <button onClick={() => setOptions(null)}>Restart</button>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {options ? (\r\n        <MemoryGame\r\n          options={options}\r\n          setOptions={setOptions}\r\n          highScore={highScore}\r\n          setHighScore={setHighScore}\r\n        />\r\n      ) : (\r\n        <h2> </h2>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n//Game Board\r\nfunction MemoryGame({ options, setOptions, highScore, setHighScore }) {\r\n  const [game, setGame] = useState([]);\r\n  const [flippedCount, setFlippedCount] = useState(0);\r\n  const [flippedIndexes, setFlippedIndexes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const colors = [\r\n      `url(${Background1})`,\r\n      `url(${Background13})`,\r\n      `url(${Background3})`,\r\n      `url(${Background4})`,\r\n      `url(${Background5})`,\r\n      `url(${Background6})`,\r\n      `url(${Background7})`,\r\n      `url(${Background8})`,\r\n      `url(${Background9})`,\r\n      `url(${Background14})`,\r\n      `url(${Background11})`,\r\n      `url(${Background12})`,\r\n    ];\r\n    const newGame = [];\r\n    for (let i = 0; i < options / 2; i++) {\r\n      const firstOption = {\r\n        id: 2 * i,\r\n        colorId: i,\r\n        color: colors[i],\r\n        flipped: false,\r\n      };\r\n      const secondOption = {\r\n        id: 2 * i + 1,\r\n        colorId: i,\r\n        color: colors[i],\r\n        flipped: false,\r\n      };\r\n\r\n      newGame.push(firstOption);\r\n      newGame.push(secondOption);\r\n    }\r\n\r\n    const shuffledGame = newGame.sort(() => Math.random() - 0.5);\r\n    setGame(shuffledGame);\r\n  }, [options]);\r\n\r\n  //Section that shows high score. Maybe change later as is a little confusing\r\n  useEffect(() => {\r\n    const finished = !game.some((card) => !card.flipped);\r\n    if (finished && game.length > 0) {\r\n      setTimeout(() => {\r\n        const bestPossible = game.length;\r\n        let multiplier;\r\n\r\n        if (options === 12) {\r\n          multiplier = 5;\r\n        } else if (options === 18) {\r\n          multiplier = 2.5;\r\n        } else if (options === 24) {\r\n          multiplier = 1;\r\n        }\r\n\r\n        const pointsLost = Math.round(\r\n          multiplier * (0.66 * flippedCount - bestPossible)\r\n        );\r\n\r\n        let score;\r\n        if (pointsLost < 100) {\r\n          score = 100 - pointsLost;\r\n        } else {\r\n          score = 0;\r\n        }\r\n        if (score > highScore) {\r\n          setHighScore(score);\r\n          const json = JSON.stringify(score);\r\n          localStorage.setItem(\"memorygamehighscore\", json);\r\n        }\r\n        //Dont need highscore window tight now. Add different score method\r\n        const newGame = window.confirm(\"You Win!, New Game?\");\r\n        if (newGame) {\r\n          const gameLength = game.length;\r\n          setOptions(null);\r\n          setTimeout(() => {\r\n            setOptions(gameLength);\r\n          }, 5);\r\n        } else {\r\n          setOptions(null);\r\n        }\r\n      }, 500);\r\n    }\r\n  }, [game, flippedCount, highScore, options, setHighScore, setOptions]);\r\n\r\n  // Runs if two cards have been flipped\r\n  if (flippedIndexes.length === 2) {\r\n    const match =\r\n      game[flippedIndexes[0]].colorId === game[flippedIndexes[1]].colorId;\r\n\r\n    if (match) {\r\n      const newGame = [...game];\r\n      newGame[flippedIndexes[0]].flipped = true;\r\n      newGame[flippedIndexes[1]].flipped = true;\r\n      setGame(newGame);\r\n\r\n      const newIndexes = [...flippedIndexes];\r\n      newIndexes.push(false);\r\n      setFlippedIndexes(newIndexes);\r\n    } else {\r\n      const newIndexes = [...flippedIndexes];\r\n      newIndexes.push(true);\r\n      setFlippedIndexes(newIndexes);\r\n    }\r\n  }\r\n\r\n  if (game.length === 0) return <div>loading...</div>;\r\n  else {\r\n    return (\r\n      <div id=\"cards\">\r\n        {game.map((card, index) => (\r\n          <div className=\"card\" key={index}>\r\n            <Card\r\n              id={index}\r\n              color={card.color}\r\n              game={game}\r\n              flippedCount={flippedCount}\r\n              setFlippedCount={setFlippedCount}\r\n              flippedIndexes={flippedIndexes}\r\n              setFlippedIndexes={setFlippedIndexes}\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//Card setup. should be in a separate file eventually\r\nfunction Card({\r\n  id,\r\n  color,\r\n  game,\r\n  flippedCount,\r\n  setFlippedCount,\r\n  flippedIndexes,\r\n  setFlippedIndexes,\r\n}) {\r\n  const [flipped, set] = useState(false);\r\n  const { transform, opacity } = useSpring({\r\n    opacity: flipped ? 1 : 0,\r\n    transform: `perspective(600px) rotateX(${flipped ? 180 : 0}deg)`,\r\n    config: { mass: 5, tension: 500, friction: 80 },\r\n  });\r\n\r\n  //Set timer, then flip the cards back\r\n  useEffect(() => {\r\n    if (flippedIndexes[2] === true && flippedIndexes.indexOf(id) > -1) {\r\n      setTimeout(() => {\r\n        set((state) => !state);\r\n        setFlippedCount(flippedCount + 1);\r\n        setFlippedIndexes([]);\r\n      }, 1800);\r\n    } else if (flippedIndexes[2] === false && id === 0) {\r\n      setFlippedCount(flippedCount + 1);\r\n      setFlippedIndexes([]);\r\n    }\r\n  }, [flippedIndexes, flippedCount, id, setFlippedCount, setFlippedIndexes]);\r\n\r\n  const onCardClick = () => {\r\n    if (!game[id].flipped && flippedCount % 3 === 0) {\r\n      set((state) => !state);\r\n      setFlippedCount(flippedCount + 1);\r\n      const newIndexes = [...flippedIndexes];\r\n      newIndexes.push(id);\r\n      setFlippedIndexes(newIndexes);\r\n    } else if (\r\n      flippedCount % 3 === 1 &&\r\n      !game[id].flipped &&\r\n      flippedIndexes.indexOf(id) < 0\r\n    ) {\r\n      set((state) => !state);\r\n      setFlippedCount(flippedCount + 1);\r\n      const newIndexes = [...flippedIndexes];\r\n      newIndexes.push(id);\r\n      setFlippedIndexes(newIndexes);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"hovernow\" onClick={onCardClick}>\r\n      <a.div\r\n        className=\"c back\"\r\n        style={{\r\n          opacity: opacity.interpolate((o) => 1 - o),\r\n          transform,\r\n          backgroundImage: `url(${CardBack})`,\r\n        }}\r\n      />\r\n      <a.div\r\n        className=\"c front\"\r\n        style={{\r\n          opacity,\r\n          transform: transform.interpolate((t) => `${t} rotateX(180deg)`),\r\n          backgroundImage: color,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Game;\r\n","import React from \"react\";\r\nimport HomeButton from \"../img/home-button.svg\";\r\nimport logo from \"../icons/brain-2.svg\";\r\n\r\nconst About = ({ setPageStatus }) => {\r\n  return (\r\n    <div className=\"about\">\r\n      <div>\r\n        <button className=\"home-button\" onClick={() => setPageStatus(0)}>\r\n          <img className=\"home-pic\" src={HomeButton} alt=\"Home Button\" />\r\n        </button>\r\n      </div>\r\n      <div className=\"logo-title-div\">\r\n        <h1 className=\"logo-title\">EduMemory</h1>\r\n        <img className=\"brain-logo\" alt=\"EduMemory logo\" src={logo}></img>\r\n      </div>\r\n      <div>\r\n        <h2>About My App</h2>\r\n        <p>\r\n          Hello! My name is Tom, and this is my first ever app, <br /> and the\r\n          beginning of the creation of several more in the future! <br /> This\r\n          took a while to make and I hope you enjoy it!\r\n        </p>\r\n        <h2>Credits:</h2>\r\n        <p>\r\n          I used{\" \"}\r\n          <a\r\n            href=\"https://code.visualstudio.com/\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n          >\r\n            Visual Studio Code\r\n          </a>{\" \"}\r\n          to write my code for this project. <br />I used{\" \"}\r\n          <a href=\"https://github.com\" target=\"_blank\" rel=\"noreferrer\">\r\n            {\" \"}\r\n            GitHub\r\n          </a>{\" \"}\r\n          to store and share my code.\r\n          <br />I used{\" \"}\r\n          <a href=\"https://developedbyed.com/\" target=\"_blank\" rel=\"noreferrer\">\r\n            This Coarse\r\n          </a>{\" \"}\r\n          to help me learn HTML and CSS.\r\n          <br />I used{\" \"}\r\n          <a href=\"https://watchandcode.com/\" target=\"_blank\" rel=\"noreferrer\">\r\n            This Coarse\r\n          </a>{\" \"}\r\n          to help me learn JavaScript. <br />\r\n          <a\r\n            href=\"https://reactjsexample.com/a-simple-memory-game-with-react-js/\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n          >\r\n            This\r\n          </a>{\" \"}\r\n          is the memory game that I based mine off of.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\n\r\nimport logo from \"../icons/brain-2.svg\";\r\nimport HomeButton from \"../img/home-button.svg\";\r\n\r\nconst Tutorial = ({ setPageStatus }) => {\r\n  return (\r\n    <div className=\"tutorial\">\r\n      <div>\r\n        <button onClick={() => setPageStatus(0)} className=\"home-button\">\r\n          <img className=\"home-pic\" src={HomeButton} alt=\"Home Button\" />\r\n        </button>\r\n      </div>\r\n      <div className=\"logo-title-div\">\r\n        <h1 className=\"logo-title\">EduMemory</h1>\r\n        <img className=\"brain-logo\" alt=\"EduMemory logo\" src={logo}></img>\r\n      </div>\r\n      <div>\r\n        <h2>How do you play?</h2>\r\n        <p>\r\n          When you press play you will get 12, 18, or 24 cards face down\r\n          depending on the level you choose. <br /> Take a wild guess! Click on\r\n          any card and make sure to remember what is on the other side of the\r\n          card. <br /> Each card has a pair that goes with it, try to flip both\r\n          cards in one turn. <br /> Theres a timer as well, try to beat your\r\n          last time!\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tutorial;\r\n","import React, { useState } from \"react\";\r\n//Adding Components\r\nimport Home from \"./Components/Home\";\r\nimport Game from \"./Components/Game\";\r\nimport About from \"./Components/About\";\r\nimport Tutorial from \"./Components/Tutorial\";\r\n//Import Styles\r\nimport \"./styles/app.scss\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\n//import useWindowSize from \"./useWindowSize\";\r\n\r\nfunction App() {\r\n  const [pageStatus, setPageStatus] = useState(0);\r\n  // Can use this if responsive components (e.g. 1 for Mobile & 1 for Desktop)\r\n  //const windowSize = useWindowSize();\r\n  return (\r\n    <div className=\"App\">\r\n      <section>\r\n        {(() => {\r\n          switch (pageStatus) {\r\n            case 1:\r\n              return (\r\n                <AnimatePresence exitBeforeEnter>\r\n                  <motion.div\r\n                    exit={{ opacity: 0 }}\r\n                    initial={{ opacity: 0 }}\r\n                    animate={{ opacity: 1 }}\r\n                  >\r\n                    <Game\r\n                      pageStatus={pageStatus}\r\n                      setPageStatus={setPageStatus}\r\n                    />\r\n                  </motion.div>\r\n                </AnimatePresence>\r\n              );\r\n            case 2:\r\n              return (\r\n                <AnimatePresence exitBeforeEnter>\r\n                  <motion.div\r\n                    exit={{ opacity: 0 }}\r\n                    initial={{ opacity: 0 }}\r\n                    animate={{ opacity: 1 }}\r\n                  >\r\n                    <Tutorial\r\n                      pageStatus={pageStatus}\r\n                      setPageStatus={setPageStatus}\r\n                    />\r\n                  </motion.div>\r\n                </AnimatePresence>\r\n              );\r\n            case 3:\r\n              return (\r\n                <AnimatePresence exitBeforeEnter>\r\n                  <motion.div\r\n                    exit={{ opacity: 0 }}\r\n                    initial={{ opacity: 0 }}\r\n                    animate={{ opacity: 1 }}\r\n                  >\r\n                    <About\r\n                      pageStatus={pageStatus}\r\n                      setPageStatus={setPageStatus}\r\n                    />\r\n                  </motion.div>\r\n                </AnimatePresence>\r\n              );\r\n            default:\r\n              return (\r\n                <Home pageStatus={pageStatus} setPageStatus={setPageStatus} />\r\n              );\r\n          }\r\n        })()}\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n//import Fade from \"./Components/transition1\";\r\n\r\n// Call Highway.Core once. Doesn't work nicely with React\r\n// const H = new Highway.Core({\r\n//   transitions: {\r\n//     default: Fade,\r\n//   },\r\n// });\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}